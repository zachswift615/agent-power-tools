name: Update Homebrew Formula

on:
  release:
    types: [published]

env:
  HOMEBREW_TAP_REPO: zachswift615/homebrew-powertools
  FORMULA_NAME: powertools

jobs:
  update-formula:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest

    steps:
      - name: Get release version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Download release assets
        run: |
          VERSION=${{ steps.get_version.outputs.version }}

          # Download all release assets with checksums
          gh release download "v${VERSION}" \
            --repo ${{ github.repository }} \
            --pattern "*.tar.gz.sha256"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract checksums
        id: checksums
        run: |
          # Read checksums from downloaded files
          ARM64_SHA=$(cat powertools-macos-arm64.tar.gz.sha256 | awk '{print $1}')
          X86_64_SHA=$(cat powertools-macos-x86_64.tar.gz.sha256 | awk '{print $1}')
          LINUX_SHA=$(cat powertools-linux-x86_64.tar.gz.sha256 | awk '{print $1}')

          echo "arm64_sha=$ARM64_SHA" >> $GITHUB_OUTPUT
          echo "x86_64_sha=$X86_64_SHA" >> $GITHUB_OUTPUT
          echo "linux_sha=$LINUX_SHA" >> $GITHUB_OUTPUT

          echo "Checksums extracted:"
          echo "  ARM64:  $ARM64_SHA"
          echo "  x86_64: $X86_64_SHA"
          echo "  Linux:  $LINUX_SHA"

      - name: Checkout Homebrew tap
        uses: actions/checkout@v3
        with:
          repository: ${{ env.HOMEBREW_TAP_REPO }}
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-tap

      - name: Update formula
        run: |
          cd homebrew-tap/Formula
          VERSION=${{ steps.get_version.outputs.version }}
          ARM64_SHA=${{ steps.checksums.outputs.arm64_sha }}
          X86_64_SHA=${{ steps.checksums.outputs.x86_64_sha }}
          LINUX_SHA=${{ steps.checksums.outputs.linux_sha }}

          # Update version
          sed -i "s/version \".*\"/version \"$VERSION\"/" ${{ env.FORMULA_NAME }}.rb

          # Update ARM64 SHA
          sed -i "s/REPLACE_WITH_ARM64_SHA256/$ARM64_SHA/" ${{ env.FORMULA_NAME }}.rb
          sed -i "/powertools-macos-arm64.tar.gz/,/sha256/ s/sha256 \".*\"/sha256 \"$ARM64_SHA\"/" ${{ env.FORMULA_NAME }}.rb

          # Update x86_64 SHA
          sed -i "s/REPLACE_WITH_X86_64_SHA256/$X86_64_SHA/" ${{ env.FORMULA_NAME }}.rb
          sed -i "/powertools-macos-x86_64.tar.gz/,/sha256/ s/sha256 \".*\"/sha256 \"$X86_64_SHA\"/" ${{ env.FORMULA_NAME }}.rb

          # Update Linux SHA
          sed -i "s/REPLACE_WITH_LINUX_SHA256/$LINUX_SHA/" ${{ env.FORMULA_NAME }}.rb
          sed -i "/powertools-linux-x86_64.tar.gz/,/sha256/ s/sha256 \".*\"/sha256 \"$LINUX_SHA\"/" ${{ env.FORMULA_NAME }}.rb

          echo "Updated formula:"
          cat ${{ env.FORMULA_NAME }}.rb

      - name: Commit and push
        run: |
          cd homebrew-tap
          VERSION=${{ steps.get_version.outputs.version }}

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add Formula/${{ env.FORMULA_NAME }}.rb

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update ${{ env.FORMULA_NAME }} to v${VERSION}" \
                       -m "Automated update with SHA256 checksums from release." \
                       -m "ARM64:  ${{ steps.checksums.outputs.arm64_sha }}" \
                       -m "x86_64: ${{ steps.checksums.outputs.x86_64_sha }}" \
                       -m "Linux:  ${{ steps.checksums.outputs.linux_sha }}"

            git push
            echo "✅ Formula updated successfully!"
          fi

      - name: Verify formula
        run: |
          cd homebrew-tap
          cat Formula/${{ env.FORMULA_NAME }}.rb

          # Check that no placeholders remain
          if grep -q "REPLACE_WITH" Formula/${{ env.FORMULA_NAME }}.rb; then
            echo "❌ Error: Placeholders still present in formula"
            exit 1
          fi

          echo "✅ Formula verification passed"
