{
  "permissions": {
    "allow": [
      "Bash(workshop:*)",
      "Bash(workshop antipattern:*)",
      "Bash(workshop clean:*)",
      "Bash(workshop clear:*)",
      "Bash(workshop context)",
      "Bash(workshop debug)",
      "Bash(workshop decision:*)",
      "Bash(workshop delete:*)",
      "Bash(workshop export:*)",
      "Bash(workshop goal:*)",
      "Bash(workshop gotcha:*)",
      "Bash(workshop import:*)",
      "Bash(workshop import-status)",
      "Bash(workshop info)",
      "Bash(workshop init:*)",
      "Bash(workshop next:*)",
      "Bash(workshop note:*)",
      "Bash(workshop preference:*)",
      "Bash(workshop preferences)",
      "Bash(workshop read:*)",
      "Bash(workshop recent)",
      "Bash(workshop search:*)",
      "Bash(workshop session:*)",
      "Bash(workshop sessions)",
      "Bash(workshop state)",
      "Bash(workshop summary)",
      "Bash(workshop web)",
      "Bash(workshop why:*)",
      "Bash(.claude/workshop-session-start.sh)",
      "Bash(./.claude/workshop-session-start.sh)",
      "Bash(.claude/workshop-session-start.sh:*)",
      "Bash(./.claude/workshop-session-start.sh:*)",
      "Bash(.claude/workshop-session-end.sh:*)",
      "Bash(./.claude/workshop-session-end.sh:*)",
      "Bash(.claude/workshop-pre-compact.sh)",
      "Bash(./.claude/workshop-pre-compact.sh)",
      "Bash(.claude/workshop-pre-compact.sh:*)",
      "Bash(./.claude/workshop-pre-compact.sh:*)",
      "WebSearch",
      "Bash(cargo:*)",
      "Bash(chmod:*)",
      "Bash(source:*)",
      "Bash(~/.cargo/bin/cargo build --release)",
      "Bash(./target/release/powertools:*)",
      "Bash(./powertools-cli/target/release/powertools:*)",
      "Bash(git add:*)",
      "Bash(curl:*)",
      "Bash(~/.cargo/bin/cargo build)",
      "Bash(~/.cargo/bin/cargo doc --no-deps --open -p scip)",
      "Read(//Users/zswift/swordsweeper/alloy-crm/**)",
      "Read(//Users/zswift/.cargo/registry/src/**)",
      "Bash(cat:*)",
      "WebFetch(domain:www.shuttle.dev)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:redandgreen.co.uk)",
      "Bash(~/.cargo/bin/rust-analyzer --version)",
      "Read(//Users/zswift/.config/**)",
      "Read(//Users/zswift/homebrew-powertools/**)",
      "Bash(find:*)",
      "Read(//tmp/**)",
      "Bash(git commit:*)",
      "mcp__powertools__project_stats",
      "mcp__powertools__list_functions",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools functions /Users/zachswift/projects/substansive_synth/SubstansiveSynth/Source/PluginProcessor.cpp --format json)",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools search-ast \"(function_definition) @func\" -p /Users/zachswift/projects/substansive_synth/SubstansiveSynth/Source/PluginProcessor.cpp --format json)",
      "Bash(gh run list:*)",
      "Bash(~/.cargo/bin/cargo fix --bin \"powertools\" --allow-dirty)",
      "WebFetch(domain:crates.io)",
      "Bash(mkdir:*)",
      "Bash(~/.cargo/bin/cargo test --manifest-path=/Users/zachswift/projects/agent-power-tools/powertools-cli/Cargo.toml --lib refactor::transaction)",
      "Bash(~/.cargo/bin/cargo build --release --manifest-path=/Users/zachswift/projects/agent-power-tools/powertools-cli/Cargo.toml)",
      "Read(//Users/zachswift/projects/refactorTestingRepos/**)",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools index --auto-install --languages typescript)",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools rename-symbol packages/query-core/src/queryClient.ts 79 3 mountClient --preview --project /Users/zachswift/projects/refactorTestingRepos/query)",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools definition packages/query-core/src/queryClient.ts:79:10 --format json -p /Users/zachswift/projects/refactorTestingRepos/query)",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools references mount --format json -p /Users/zachswift/projects/refactorTestingRepos/query)",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools index --auto-install --languages rust)",
      "Bash(/Users/zachswift/projects/agent-power-tools/powertools-cli/target/release/powertools:*)",
      "Bash(~/.cargo/bin/cargo build --release --quiet)",
      "Bash(python3:*)",
      "Bash(gh run view:*)",
      "Bash(~/.cargo/bin/cargo fix --bin \"powertools\" --allow-dirty --manifest-path=/Users/zachswift/projects/agent-power-tools/powertools-cli/Cargo.toml)",
      "Bash(~/.cargo/bin/cargo build --manifest-path=/Users/zachswift/projects/agent-power-tools/powertools-cli/Cargo.toml)",
      "Bash(git push:*)",
      "Read(//Users/zachswift/projects/scip-python/**)",
      "Read(//Users/zachswift/projects/reposToTestWith/poetry-core/**)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools index --auto-install --languages python)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools functions --format json)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools references get_project_from_dir --format json -p .)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools references Factory --format json -p .)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools definition tests/conftest.py:20:30 --format json -p .)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools definition tests/conftest.py:14:35 --format json -p .)",
      "Bash(scip print:*)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools definition tests/conftest.py:43:17 --format json -p .)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools definition tests/conftest.py:112:14 --format json -p .)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools references Factory --include-declarations --format json -p .)",
      "Bash(npm run webpack:*)",
      "Bash(npm install)",
      "Bash(node:*)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools watcher-stop)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools references Factory -p .)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools inline-variable test.ts 9 7 --preview)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools references userName --format json)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools inline-variable:*)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools index:*)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools references message:*)",
      "Bash(~/projects/agent-power-tools/powertools-cli/target/release/powertools definition:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "powertools"
  ]
}
